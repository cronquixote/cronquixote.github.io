<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cron Quixote</title>
    <link>https://cronquixote.dev/</link>
    <description>Recent content on Cron Quixote</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 24 Jan 2023 21:11:10 -0600</lastBuildDate><atom:link href="https://cronquixote.dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Generating Embeddable Terminal Sessions</title>
      <link>https://cronquixote.dev/posts/generating-embeddable-terminal-sessions/</link>
      <pubDate>Tue, 24 Jan 2023 21:11:10 -0600</pubDate>
      
      <guid>https://cronquixote.dev/posts/generating-embeddable-terminal-sessions/</guid>
      <description>Overview There are several tools that allow you to generate image (GIF) or video (WebM, MP4) recordings of a terminal session.
You can then embed these recordings in a blog to illustrate the input and output of a CLI app.
Our ideal tool would:
Be (relatively) easy to install Be configurable via easy to understand text files Generate high quality recordings Perform typing automatically, so we don&amp;rsquo;t have to re-record if we make a mistake The tool I found that best meets these criteria is VHS.</description>
      <content>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;There are several tools that allow you to generate image (GIF) or video (WebM, MP4) recordings of a terminal session.&lt;/p&gt;
&lt;p&gt;You can then embed these recordings in a blog to illustrate the input and output of a CLI app.&lt;/p&gt;
&lt;p&gt;Our ideal tool would:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Be (relatively) easy to install&lt;/li&gt;
&lt;li&gt;Be configurable via easy to understand text files&lt;/li&gt;
&lt;li&gt;Generate high quality recordings&lt;/li&gt;
&lt;li&gt;Perform typing automatically, so we don&amp;rsquo;t have to re-record if we make a mistake&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The tool I found that best meets these criteria is &lt;a href=&#34;https://github.com/charmbracelet/vhs&#34;&gt;VHS&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;installing-vhs-with-homebrew&#34;&gt;Installing VHS with Homebrew&lt;/h2&gt;
&lt;p&gt;If you have Homebrew installed, you can install VHS and all its dependencies easily:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install charmbracelet/tap/vhs ffmpeg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install ttyd --HEAD
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;installing-vhs-without-homebrew&#34;&gt;Installing VHS without Homebrew&lt;/h2&gt;
&lt;p&gt;If you don&amp;rsquo;t have Homebrew installed, you can download the binary releases of VHS and ttyd to somewhere on your &lt;code&gt;$PATH&lt;/code&gt;, and install FFmpeg using your package manager.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Release page for &lt;a href=&#34;https://github.com/charmbracelet/vhs/releases&#34;&gt;VHS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Release page for &lt;a href=&#34;https://github.com/tsl0922/ttyd/releases&#34;&gt;ttyd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo dnf install ffmpeg-free&lt;/code&gt; on Fedora or &lt;code&gt;sudo apt install ffmpeg&lt;/code&gt; on Ubuntu&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;generate-an-example-tape-file&#34;&gt;Generate an example Tape file&lt;/h2&gt;
&lt;p&gt;Tape files are just text files that contain commands VHS understands. The file extension &lt;code&gt;.tape&lt;/code&gt; is optional.&lt;/p&gt;
&lt;p&gt;Generate an example Tape file and view it in your editor to see what&amp;rsquo;s possible:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vhs new example.tape
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;record-a-tape-file&#34;&gt;Record a Tape file&lt;/h2&gt;
&lt;p&gt;Alternatively, you can record a Tape file of you issuing terminal commands:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vhs record &amp;gt; myfile.tape
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you make any mistakes typing, you can easily fix them in the Tape file.&lt;/p&gt;
&lt;h2 id=&#34;converting-a-tape-file-to-an-embeddable-asset&#34;&gt;Converting a Tape file to an embeddable asset&lt;/h2&gt;
&lt;p&gt;When you&amp;rsquo;re satisfied with the content of your Tape file, you can generate an embeddable asset like so:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vhs &amp;lt; myfile.tape
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If your Tape file doesn&amp;rsquo;t have an &lt;code&gt;Output&lt;/code&gt; command, VHS defaults to creating the file &lt;code&gt;out.gif&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you want to create a WebM file, you&amp;rsquo;ll need to add a command to your Tape file, e.g. &lt;code&gt;Output myfile.webm&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;quick-tape-file-reference&#34;&gt;Quick Tape file reference&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# You can generate multiple assets at once&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Output demo.gif
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Output demo.webm
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Output demo.mp4
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# See all available themes with `vhs themes`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Set Theme Dracula
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# You can use any font available to your terminal&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Set FontFamily &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Droid Sans Mono Slashed for Powerline&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Set FontSize &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Set the asset dimensions&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Set Width &lt;span style=&#34;color:#ae81ff&#34;&gt;1200&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Set Height &lt;span style=&#34;color:#ae81ff&#34;&gt;600&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Enter your command as text&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Type &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;echo &amp;#39;Hello, World&amp;#39;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Optionally sleep between commands to improve viewability of the recording&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Sleep 500ms
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Sleep 5s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Send a special key or control sequence&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Enter
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Ctrl+C
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;example-recording&#34;&gt;Example recording&lt;/h2&gt;
&lt;p&gt;And now for the payoff:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cronquixote.dev/vhs-example.gif&#34; alt=&#34;VHS Example&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Just Enough tmux</title>
      <link>https://cronquixote.dev/posts/just-enough-tmux/</link>
      <pubDate>Tue, 24 Jan 2023 15:34:42 -0600</pubDate>
      
      <guid>https://cronquixote.dev/posts/just-enough-tmux/</guid>
      <description>Why tmux? Many terminal emulators offer ways to create multiple tabs and multiple panes within each tab.
However, each emulator has its own particular keyboard shortcuts, which are not transferrable.
Using tmux lets you always have easy keyboard access to the functionality you need in any terminal emulator, on any platform.
There have been entire books published on tmux, but this post is all you need to get a ton of utility from this tool.</description>
      <content>&lt;h2 id=&#34;why-tmux&#34;&gt;Why tmux?&lt;/h2&gt;
&lt;p&gt;Many terminal emulators offer ways to create multiple tabs and multiple panes within each tab.&lt;/p&gt;
&lt;p&gt;However, each emulator has its own particular keyboard shortcuts, which are not transferrable.&lt;/p&gt;
&lt;p&gt;Using tmux lets you always have easy keyboard access to the functionality you need in any terminal emulator, on any platform.&lt;/p&gt;
&lt;p&gt;There have been entire books published on tmux, but this post is all you need to get a ton of utility from this tool.&lt;/p&gt;
&lt;h2 id=&#34;auto-starting-tmux&#34;&gt;Auto-starting tmux&lt;/h2&gt;
&lt;p&gt;To start a new tmux session automatically when opening a new terminal window, add the following to your &lt;code&gt;.bashrc&lt;/code&gt; (or relevant shell startup file).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; -z &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$TMUX&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  tmux new-session
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Alternatively, just use &lt;code&gt;tmux new-session&lt;/code&gt; to start a tmux session in the current terminal window.&lt;/p&gt;
&lt;p&gt;You can exit your tmux session by using the &lt;code&gt;exit&lt;/code&gt; command or entering &lt;code&gt;Ctrl + d&lt;/code&gt; (on Unix).&lt;/p&gt;
&lt;h2 id=&#34;a-basic-config&#34;&gt;A basic config&lt;/h2&gt;
&lt;p&gt;The config file goes in your &lt;code&gt;$HOME&lt;/code&gt; directory and is named &lt;code&gt;.tmux.conf&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;All tmux keyboard shortcuts start with the &amp;ldquo;bind key&amp;rdquo;, which defaults to &lt;code&gt;Ctrl + b&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This line will let you quickly reload your tmux config while making tweaks:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Reload tmux config file with shortcut Ctrl + b, r&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bind r source-file ~/.tmux.conf &lt;span style=&#34;color:#ae81ff&#34;&gt;\;&lt;/span&gt; display-message &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tmux.conf reloaded&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;adding-vim-like-shortcuts&#34;&gt;Adding vim-like shortcuts&lt;/h2&gt;
&lt;p&gt;To make tmux behave more like Vim, I like to add the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Switch panes with vim directional shortcuts&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bind h &lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt;-pane -L &lt;span style=&#34;color:#75715e&#34;&gt;# Move to left pane with Ctrl + b, h&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bind j &lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt;-pane -D &lt;span style=&#34;color:#75715e&#34;&gt;# Move to lower pane with Ctrl + b, j&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bind k &lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt;-pane -U## Move to upper pane with Ctrl + b, k
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bind l &lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt;-pane -R &lt;span style=&#34;color:#75715e&#34;&gt;# Move to right pane with Ctrl + b, l&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Resize panes with vim directional shortcuts&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# In contrast to pane switching shortcuts, keep holding Ctrl or press it again&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bind -r C-h resize-pane -L &lt;span style=&#34;color:#75715e&#34;&gt;# Shrink left pane with Ctrl + b, Ctrl + h&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bind -r C-j resize-pane -D &lt;span style=&#34;color:#75715e&#34;&gt;# Shrink lower pane with Ctrl + b, Ctrl + j&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bind -r C-k resize-pane -U &lt;span style=&#34;color:#75715e&#34;&gt;# Shrink upper pane with Ctrl + b, Ctrl + k&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bind -r C-l resize-pane -R &lt;span style=&#34;color:#75715e&#34;&gt;# Shrink right pane with Ctrl + b, Ctrl + l&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Use vim movement keys when in copy mode&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set-window-option -g mode-keys vi
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Emulate vim&amp;#39;s visual mode in tmux copy mode&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bind -T copy-mode-vi &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;v&amp;#39;&lt;/span&gt; send -X begin-selection
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bind -T copy-mode-vi &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;V&amp;#39;&lt;/span&gt; send -X &lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt;-line
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;plugin-manager&#34;&gt;Plugin manager&lt;/h2&gt;
&lt;p&gt;I like to install a plugin manager, mostly just to get &lt;code&gt;tmux-yank&lt;/code&gt;, which lets me copy to the system clipboard from tmux&amp;rsquo;s copy mode. You can install the &lt;code&gt;tpm&lt;/code&gt; plugin manager using the &lt;a href=&#34;https://github.com/tmux-plugins/tpm&#34;&gt;official docs&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# tmux plugin manager&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set -g @plugin &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tmux-plugins/tpm&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# tmux plugin to allow copying selected text in copy mode to system clipboard&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set -g @plugin &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tmux-plugins/tmux-yank&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Initialize tmux plugin manager (keep this line at the very bottom of tmux.conf)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;run &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;~/.tmux/plugins/tpm/tpm&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;customizing-the-styles-and-the-status-bar&#34;&gt;Customizing the styles and the status bar&lt;/h2&gt;
&lt;p&gt;You can tweak the status bar to your heart&amp;rsquo;s content. I like to keep it simple:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Using Dracula theme colors&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Set status line background color (green)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set-option -g status-style fg&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;black,bg&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#50fa7b&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Set active pane border (purple)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set-option -g pane-active-border-style fg&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#bd93f9&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Set status line background when receiving message (red)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set-option -g message-style fg&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;black,bg&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#ff5555&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Set emoji to appear on right side of status line&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set -g status-right &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;💾 &amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;useful-shortcuts&#34;&gt;Useful shortcuts&lt;/h2&gt;
&lt;h3 id=&#34;windows&#34;&gt;Windows&lt;/h3&gt;
&lt;p&gt;Think of windows like &amp;ldquo;tabs&amp;rdquo; in your terminal.&lt;/p&gt;
&lt;p&gt;Create new window: &lt;code&gt;Ctrl + b, n&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Rename current window: &lt;code&gt;Ctrl + b, ,&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Next window: &lt;code&gt;Ctrl + b, n&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Previous window: &lt;code&gt;Ctrl + b, p&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Select window by number: &lt;code&gt;Ctrl + b, 0..9&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Toggle last active window: &lt;code&gt;Ctrl + b, l&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;panes&#34;&gt;Panes&lt;/h3&gt;
&lt;p&gt;Split into vertical panes: &lt;code&gt;Ctrl + b, %&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Split into horizontal panes: &lt;code&gt;Ctrl + b, &amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Temporarily make pane take up whole window: &lt;code&gt;Ctrl + b, z&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Toggle pane layouts (resize/reorganize): &lt;code&gt;Ctrl + b, space&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Make pane into a new window: &lt;code&gt;Ctrl + b, !&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Kill pane: &lt;code&gt;Ctrl + b, x&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;general&#34;&gt;General&lt;/h3&gt;
&lt;p&gt;List shortcuts: &lt;code&gt;Ctrl + b, ?&lt;/code&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Why Microservices?</title>
      <link>https://cronquixote.dev/posts/why-microservices/</link>
      <pubDate>Sun, 22 Jan 2023 21:17:36 -0600</pubDate>
      
      <guid>https://cronquixote.dev/posts/why-microservices/</guid>
      <description>What are microservices? Microservices are small, independently-managed units of software corresponding to fine-grained business domains.
Synchronous microservices collaborate directly with one another in order to accomplish business tasks.
Event-driven microservices only collaborate directly with an event queue, publishing events for other services to process and processing events produced by other services.
In contrast, a monolith is a single, large piece of software whose functionality covers multiple business domains.
While monolithic architectures are suitable for smaller organizations, microservices make sense for larger enterprises and those experiencing rapid growth.</description>
      <content>&lt;h2 id=&#34;what-are-microservices&#34;&gt;What are microservices?&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Microservices&lt;/strong&gt; are small, independently-managed units of software corresponding to fine-grained business domains.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Synchronous microservices&lt;/strong&gt; collaborate directly with one another in order to accomplish business tasks.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Event-driven microservices&lt;/strong&gt; only collaborate directly with an event queue, publishing events for other services to process and processing events produced by other services.&lt;/p&gt;
&lt;p&gt;In contrast, a &lt;strong&gt;monolith&lt;/strong&gt; is a single, large piece of software whose functionality covers multiple business domains.&lt;/p&gt;
&lt;p&gt;While monolithic architectures are suitable for smaller organizations, microservices make sense for larger enterprises and those experiencing rapid growth.&lt;/p&gt;
&lt;p&gt;In particular, Software as a Service (SaaS) applications are well-suited to a microservices approach, due to their requirement to operate without maintenance downtime.&lt;/p&gt;
&lt;h2 id=&#34;how-can-microservices-help&#34;&gt;How can microservices help?&lt;/h2&gt;
&lt;h3 id=&#34;enable-massive-scalability&#34;&gt;Enable massive scalability&lt;/h3&gt;
&lt;p&gt;A monolithic codebase must be scaled as a single, unwieldy mass.&lt;/p&gt;
&lt;p&gt;With microservices, each narrowly-focused software component can be scaled as much as needed to support demand.&lt;/p&gt;
&lt;p&gt;Event-driven microservices maximixe this flexibility by skirting the need to scale interdependent services as a group.&lt;/p&gt;
&lt;p&gt;Additionally, lesser-used components can run on lower-powered hardware to reduce costs.&lt;/p&gt;
&lt;h3 id=&#34;improve-robustness&#34;&gt;Improve robustness&lt;/h3&gt;
&lt;p&gt;If one part of a monolith fails, the whole system is likely to fail.&lt;/p&gt;
&lt;p&gt;The clear boundaries between components in a microservices architecture allow the system to continue functioning even while certain areas of service are degraded.&lt;/p&gt;
&lt;h3 id=&#34;harness-innovation-and-best-in-class-tools&#34;&gt;Harness innovation and best-in-class tools&lt;/h3&gt;
&lt;p&gt;Because teams construct microservices independently, they can choose the best-in-class language or tool for any given software component.&lt;/p&gt;
&lt;p&gt;In this way, teams avoid the technical limitations imposed by a monolith built with a single language or paradigm.&lt;/p&gt;
&lt;p&gt;Teams can quickly incorporate cutting-edge technologies as pilot projects to uncover novel ways of benefitting stakeholders.&lt;/p&gt;
&lt;h3 id=&#34;speed-up-software-releases&#34;&gt;Speed up software releases&lt;/h3&gt;
&lt;p&gt;Since teams can release each microservice independently of other services, new features reach customers faster.&lt;/p&gt;
&lt;p&gt;Releasing software in small pieces makes it easier to isolate the source of any errors and perform quick rollbacks of problematic code.&lt;/p&gt;
&lt;p&gt;Contrast this with the often cumbersome and risky releases of monolithic software, even for small changes.&lt;/p&gt;
&lt;h3 id=&#34;better-align-technology-with-the-organization&#34;&gt;Better align technology with the organization&lt;/h3&gt;
&lt;p&gt;Since the requirements of separate business domains are encapsulated in separate microservices, developers are empowered to make changes quickly and independently from other teams, minimizing coordination costs.&lt;/p&gt;
&lt;p&gt;Smaller units of software enable smaller teams, whose lower communication overhead yields increased productivity.&lt;/p&gt;
&lt;h3 id=&#34;aid-comprehensibility&#34;&gt;Aid comprehensibility&lt;/h3&gt;
&lt;p&gt;Limiting the scope of microservices makes them easier for developers to understand and manage.&lt;/p&gt;
&lt;p&gt;Improved comprehension means fewer bugs and faster development.&lt;/p&gt;
&lt;h3 id=&#34;allow-rapid-composition-of-new-product-offerings&#34;&gt;Allow rapid composition of new product offerings&lt;/h3&gt;
&lt;p&gt;Working with smaller building blocks makes composing new products easier.&lt;/p&gt;
&lt;p&gt;Extracting a subset of functionality from a monolith is often prohibitively difficult, but microservices are optimized for this type of mix-and-match development.&lt;/p&gt;
&lt;h2 id=&#34;sources&#34;&gt;Sources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Bellemare, Adam. Building Event-Driven Microservices: Leveraging Organizational Data at Scale. O&amp;rsquo;Reilly Media, 2020.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mitra, Ronnie, and Irakli Nadareishvili. Microservices: Up and Running: A Step-by-Step Guide to Building a Microservices Architecture. O&amp;rsquo;Reilly Media, 2021.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Newman, Sam. Building Microservices. O&amp;rsquo;Reilly Media, 2021.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>Publish a Site on Github Pages with a Custom Domain</title>
      <link>https://cronquixote.dev/posts/publish-a-site-on-github-pages-with-a-custom-domain/</link>
      <pubDate>Fri, 30 Dec 2022 13:08:50 -0600</pubDate>
      
      <guid>https://cronquixote.dev/posts/publish-a-site-on-github-pages-with-a-custom-domain/</guid>
      <description>Preface All the information needed to do this is present in the official docs, however:
The content is spread across many pages Each page contains a lot of content irrelevant to this use case The docs are largely beginner-focused This post is a streamlined and somewhat-opinionated guide for experienced engineers.
1. Publish a simple &amp;ldquo;Hello, World!&amp;rdquo; page Official docs
Create a new public repo with the required naming convention: &amp;lt;username&amp;gt;.github.io.</description>
      <content>&lt;h2 id=&#34;preface&#34;&gt;Preface&lt;/h2&gt;
&lt;p&gt;All the information needed to do this is present in the official docs, however:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The content is spread across many pages&lt;/li&gt;
&lt;li&gt;Each page contains a lot of content irrelevant to this use case&lt;/li&gt;
&lt;li&gt;The docs are largely beginner-focused&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This post is a streamlined and somewhat-opinionated guide for experienced engineers.&lt;/p&gt;
&lt;h2 id=&#34;1-publish-a-simple-hello-world-page&#34;&gt;1. Publish a simple &amp;ldquo;Hello, World!&amp;rdquo; page&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://pages.github.com/&#34;&gt;Official docs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Create a new public repo with the required naming convention: &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Add an &lt;code&gt;index.html&lt;/code&gt; file to this repo with any content, e.g. &lt;code&gt;Hello, World!&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Visit &lt;code&gt;https://&amp;lt;username&amp;gt;.github.io&lt;/code&gt; to verify that it serves the &lt;code&gt;index.html&lt;/code&gt; file you just created.&lt;/p&gt;
&lt;h2 id=&#34;2-configure-your-custom-domain-on-github&#34;&gt;2. Configure your custom domain on GitHub&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site#configuring-an-apex-domain&#34;&gt;Official docs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visit your new repo in GitHub and click the &amp;ldquo;Settings&amp;rdquo; button.&lt;/p&gt;
&lt;p&gt;In the left sidebar, click &amp;ldquo;Pages&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;In the &amp;ldquo;Custom Domain&amp;rdquo; input, enter your domain, e.g. &lt;code&gt;example.com&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When you do this, GitHub adds a &lt;code&gt;CNAME&lt;/code&gt; file to your repository root, whose content is just the domain you entered above.&lt;/p&gt;
&lt;p&gt;Because of this file addition, sync your local repo with the remote before making any additional changes.&lt;/p&gt;
&lt;h2 id=&#34;3-configure-your-custom-domain-on-your-dns-provider&#34;&gt;3. Configure your custom domain on your DNS provider&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site#configuring-an-apex-domain&#34;&gt;Official docs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Remove any existing DNS records you don&amp;rsquo;t need.&lt;/p&gt;
&lt;p&gt;Add four A records for the root domain so that it points to the GitHub pages IPs:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Record Type&lt;/th&gt;
&lt;th&gt;Host&lt;/th&gt;
&lt;th&gt;Value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;@&lt;/td&gt;
&lt;td&gt;185.199.108.153&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;@&lt;/td&gt;
&lt;td&gt;185.199.109.153&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;@&lt;/td&gt;
&lt;td&gt;185.199.110.153&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;@&lt;/td&gt;
&lt;td&gt;185.199.111.153&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;You can optionally add AAAA records for IPv6.&lt;/p&gt;
&lt;p&gt;Add a CNAME record to redirect the &lt;code&gt;www.&lt;/code&gt; subdomain to your root domain:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Record Type&lt;/th&gt;
&lt;th&gt;Host&lt;/th&gt;
&lt;th&gt;Value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;CNAME&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://www.example.com&#34;&gt;www.example.com&lt;/a&gt;.&lt;/td&gt;
&lt;td&gt;example.com&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;4-verify-that-your-custom-domain-works&#34;&gt;4. Verify that your custom domain works&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/troubleshooting-custom-domains-and-github-pages&#34;&gt;Official docs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visit your custom domain and ensure that it serves your &lt;code&gt;index.html&lt;/code&gt; file. If not, follow the troubleshooting steps linked above.&lt;/p&gt;
&lt;h2 id=&#34;5-decide-how-you-want-to-build-your-site&#34;&gt;5. Decide how you want to build your site&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.github.com/en/pages/setting-up-a-github-pages-site-with-jekyll/about-github-pages-and-jekyll&#34;&gt;Official docs for Jekyll&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages#static-site-generators&#34;&gt;Official docs for other static site generators&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You have two options for building your site:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Locally&lt;/li&gt;
&lt;li&gt;Remotely (on GitHub)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I recommend building locally. You&amp;rsquo;re going to want to test your site locally anyway, so why not build it there and skip dealing with GitHub-specific quirks, limitations, and configurations?&lt;/p&gt;
&lt;p&gt;If you choose to build remotely and you use Jekyll as a static site generator, the build process will be automatic. Otherwise, you&amp;rsquo;ll need to configure GitHub Actions to build your site.&lt;/p&gt;
&lt;h2 id=&#34;6-build-your-initial-site-and-push-it&#34;&gt;6. Build your initial site and push it&lt;/h2&gt;
&lt;p&gt;Set up your chosen static site generator locally and run your first build, placing the built files in your site repo&amp;rsquo;s root.&lt;/p&gt;
&lt;p&gt;Before pushing the built files to GitHub, ensure that the &lt;code&gt;CNAME&lt;/code&gt; file created above is present in the repository root.&lt;/p&gt;
&lt;p&gt;Push the files and verify that your built site is served at your custom domain.&lt;/p&gt;
&lt;h2 id=&#34;7-mission-accomplished&#34;&gt;7. Mission accomplished&lt;/h2&gt;
&lt;p&gt;Now it&amp;rsquo;s time to get writing! 🎉&lt;/p&gt;
&lt;h2 id=&#34;optional-secure-your-custom-domain-on-github-to-prevent-potential-takeovers&#34;&gt;Optional: Secure your custom domain on GitHub to prevent potential takeovers&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/verifying-your-custom-domain-for-github-pages&#34;&gt;Offical docs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Note: This is only a risk if your domain&amp;rsquo;s DNS records point to GitHub Pages but your site is misconfigured on GitHub or its repo is deleted.&lt;/p&gt;
&lt;h2 id=&#34;optional-change-your-publishing-directory&#34;&gt;Optional: Change your publishing directory&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.github.com/en/pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site&#34;&gt;Official docs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can change the directory that GitHub uses to serve your site. GitHub calls this directory a &amp;ldquo;publishing source&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;It can be one of the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The root&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;docs/&lt;/code&gt; subdirectory&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You cannot set your publishing source to an arbitrary subdirectory.&lt;/p&gt;
&lt;p&gt;The advantage of using the &lt;code&gt;docs/&lt;/code&gt; subdirectory is that you can use the root directory to store files that you want to store in the repo, but don&amp;rsquo;t want to be served with the site, e.g. a &lt;code&gt;README&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;To change the publishing source, visit the &amp;ldquo;Pages&amp;rdquo; section of your repo&amp;rsquo;s settings and modify the &amp;ldquo;Source&amp;rdquo; dropdown. You can also change the branch that GitHub uses to publish your site to something other than &lt;code&gt;main&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note that if you change your publishing source to the &lt;code&gt;docs/&lt;/code&gt; subdirectory, then the &lt;code&gt;CNAME&lt;/code&gt; file must exist in that subdirectory, not the repo root.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>About</title>
      <link>https://cronquixote.dev/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cronquixote.dev/about/</guid>
      <description>Cron Quixote is a full stack software engineer writing about software and technology.</description>
      <content>&lt;p&gt;Cron Quixote is a full stack software engineer writing about software and technology.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cronquixote.dev/cron.gif&#34; alt=&#34;Terminal GIF&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
